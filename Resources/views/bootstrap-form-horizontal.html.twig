{% use 'form_div_layout.html.twig' %}


{% macro customContent(custom_content, key) %}
  {%- include '@HBMBootstrapForm/custom-content.html.twig' with { 'content': custom_content[key]|default(), 'type': key } only -%}
{% endmacro %}



{% block form_row %}
  {% set sub_form = false %}
  {% if block_prefixes|length == 2 %}
    {% set sub_form = true %}
  {% endif %}

  {% if sub_form %}

    {{ form_widget(form) }}

  {% else %}

    {{- _self.customContent(custom_content|default(), 'before-text') -}}

    {# Make sure the wrapper doesn't have the same id as the widget itself! #}
    {% set id = id ~ '_wrapper' %}
    {% set attr = row_attr|merge(card_text_attr|default({})) %}
    {% set attr = attr|appendToKey('class', ' ' ~ hbmbfClass('card_text', ['card-text', 'hbm-form-group', 'form-group'])) %}
    <div {{ block('widget_container_attributes') }}>
      {{- _self.customContent(custom_content|default(), 'before-item') -}}

      {% if 'checkbox' not in block_prefixes %}
        {% include '@HBMBootstrapForm/label-with-custom-content.html.twig' %}
      {% endif %}

      {% set attr = card_item_attr|default({})|appendToKey('class', ' ' ~ hbmbfClass('card_item', ['hbm-form-controls'])) %}
      <div {{ block('attributes') }}>
        {{- _self.customContent(custom_content|default(), 'before-widget') -}}
        {{ form_widget(form) }}
        {{- _self.customContent(custom_content|default(), 'after-widget') -}}

        {% if 'checkbox' in block_prefixes %}
          {% set label_attr = label_attr|appendToKey('class', ' hbm-form-label-inline') %}
          {% include '@HBMBootstrapForm/label-with-custom-content.html.twig' %}
        {% endif %}

        {{- _self.customContent(custom_content|default(), 'before-help') -}}
        {% if help is defined and help is not null %}
          {%- set help_element = hbmbfElement('help') %}
          {%- set help_attr = help_attr|appendToKey('class', ' ' ~ hbmbfClass('help', ['hbm-form-help'])) -%}
          {{ form_help(form, {'help_element': help_element, 'help_attr': help_attr, 'help_suffix': 'help'}) }}
        {% endif %}
        {{- _self.customContent(custom_content|default(), 'after-help') -}}

        {{- _self.customContent(custom_content|default(), 'before-error') -}}
        {{ form_errors(form) }}
        {{- _self.customContent(custom_content|default(), 'after-error') -}}
      </div>

      {{- _self.customContent(custom_content|default(), 'after-item') -}}
    </div>

    {{- _self.customContent(custom_content|default(), 'after-text') -}}

  {% endif %}
{% endblock form_row %}



{% block form_help -%}
  {%- if help is not empty -%}
    {%- set help_attr = help_attr|merge({class: (help_attr.class|default('') ~ ' help-text')|trim}) -%}
    <{{ help_element|raw }} id="{{ id }}_{{ help_suffix }}"{% with { attr: help_attr } %}{{ block('attributes') }}{% endwith %}>
    {%- if translation_domain is same as(false) -%}
      {%- if help_html is same as(false) -%}
        {{- help -}}
      {%- else -%}
        {{- help|raw -}}
      {%- endif -%}
    {%- else -%}
      {%- if help_html is same as(false) -%}
        {{- help|trans(help_translation_parameters, translation_domain) -}}
      {%- else -%}
        {{- help|trans(help_translation_parameters, translation_domain)|raw -}}
      {%- endif -%}
    {%- endif -%}
    </{{ help_element|raw }}>
  {%- endif -%}
{%- endblock form_help %}



{%- block button_row -%}
  {{- form_widget(form) -}}
{%- endblock button_row -%}



{% block form_errors %}
  {% if errors|length > 0 %}
    {{ hbmbfTagStart('ul', hbmbfClasses('alerts_ul', ['hbm-alerts']))|raw }}
    {% for error in errors %}
      {{ hbmbfHtml(error.message, 'li', hbmbfClasses('alerts_li'))|raw }}
    {% endfor %}
    {{ hbmbfTagEnd('ul')|raw }}
  {% endif %}
{% endblock form_errors %}



{% block form_widget -%}
  {% if compound %}
    {% if card|default(false) %}
      {{- block('form_widget_compound_card') -}}
    {% else %}
      {{- block('form_widget_compound') -}}
    {% endif %}
  {% else %}
    {{- block('form_widget_simple') -}}
  {% endif %}
{%- endblock form_widget %}



{% block form_widget_compound_card -%}
  {% set attr = attr|merge(card_attr|default({}))|appendToKey('class', ' ' ~ hbmbfClass('card', ['card', 'hbm-form-card'])) %}
  <div {{ block('widget_container_attributes') }}>
    {{- _self.customContent(custom_content|default(), 'before-header') -}}

    {% set attr = card_header_attr|default({})|appendToKey('class', ' ' ~ hbmbfClass('card_header', ['card-header', 'hbm-form-header'])) %}
    <div {{ block('attributes') }}>
      {{- _self.customContent(custom_content|default(), 'before-headline') -}}
      {{ form_label(form) }}
      {{- _self.customContent(custom_content|default(), 'after-headline') -}}
    </div>

    {{- _self.customContent(custom_content|default(), 'after-header') -}}
    {{- _self.customContent(custom_content|default(), 'before-body') -}}

    {% set attr = card_body_attr|default({})|appendToKey('class', ' ' ~ hbmbfClass('card_body', ['card-body', 'hbm-form-body', 'card-body-collapsible'])) %}
    <div {{ block('attributes') }}>
      {{- _self.customContent(custom_content|default(), 'before-rows') -}}

      {%- if form.parent is empty -%}
        {{ form_errors(form) }}
      {%- endif -%}
      {{- block('form_rows') -}}
      {{- form_rest(form) -}}

      {{- _self.customContent(custom_content|default(), 'after-rows') -}}
    </div>

    {{- _self.customContent(custom_content|default(), 'after-body') -}}
  </div>
{%- endblock form_widget_compound_card %}



{% block form_widget_simple %}
  {% set type = type|default('text') %}
  {% set classes = attr.class|default('')|token(' ') %}

  {% if 'hidden' not in block_prefixes %}<span class="input-group">{% endif %}
  <input type="{{ type }}" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}" {% endif %}/>

  {%- if 'read_only' in attr|keys %}
    <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-ban"></i></span></span>
    {%- elseif disabled %}
    <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-ban"></i></span></span>
    {%- elseif 'number' in block_prefixes %}
    <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-hashtag"></i></span></span>
    {%- elseif 'color' in block_prefixes %}
    <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-palette"></i></span></span>
    {%- elseif 'email' in block_prefixes %}
    <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-envelope"></i></span></span>
    {%- elseif 'date-picker' in classes or 'datetime-picker' in classes or type == 'datetime' %}
    <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-calendar"></i></span></span>
    {%- elseif 'url' in block_prefixes %}
    <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-globe"></i></span></span>
    {%- elseif 'file' in block_prefixes %}
    <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-file"></i></span></span>
    {%- elseif 'password' in block_prefixes %}
    <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-key"></i></span></span>
    {%- elseif 'money' in block_prefixes %}
    <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-euro-sign"></i></span></span>
    {%- elseif 'text' in block_prefixes %}
    <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-pencil-alt"></i></span></span>
  {% endif -%}
  {% if 'hidden' not in block_prefixes %}</span>{% endif %}
{% endblock form_widget_simple %}



{% block choice_widget_collapsed %}
  {%- set additional_classes = 'custom-select' -%}
  {{ parent() }}
{% endblock choice_widget_collapsed %}



{% block checkbox_widget %}
  {%- set additional_classes = '' -%}
  <input type="checkbox" {{ block('widget_attributes') }}{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %} />
{% endblock checkbox_widget %}



{%- block money_widget -%}
  {%- set type = type|default('money') -%}
  {{ block('form_widget_simple') }}
{%- endblock money_widget -%}



{% block choice_widget_expanded_item %}
  <li class="input-group">
    <span class="input-group-prepend {{ multiple ? 'hbm-form-input-checkbox' : 'hbm-form-input-radio' }}">
      <span class="input-group-text">
        {{ form_widget(choice_item) }}
      </span>
    </span>
    {{ form_label(choice_item, null, { 'label_attr': { 'class': 'form-control' }, 'label_raw': choice_label_raw }) }}
  </li>
{% endblock choice_widget_expanded_item %}



{% block choice_widget_expanded %}
  {% set attr = attr|appendToKey('class', ' hbm-form-input-groups') %}
  {% set attr = attr|merge({'class':attr.class|cssClasses}) %}

  {% set choice_label_raw = form.vars.choice_label_raw %}

  {% set widgets = {} %}
  {% set placeholder = null %}
  {% for childKey, child in form %}
    {% if childKey is same as('placeholder') %}
      {% set placeholder = child %}
    {% else %}
      {% set widgets = widgets|merge({ ('formView_'~child.vars.value): child}) %}
    {% endif %}
  {% endfor %}

  {% set widgetKeys = widgets|keys %}

  <ul {{ block('widget_container_attributes') }}>

    {% set choice_item = placeholder %}
    {% if choice_item is not null %}
      {{ block('choice_widget_expanded_item') }}
    {% endif %}

    {% for choiceKey, choiceData in form.vars.choices %}
      {% if choiceData is instanceof('Symfony\\Component\\Form\\ChoiceList\\View\\ChoiceGroupView') %}
        <li class="input-group">
          <span class="input-group-header">
            <span class="input-group-text">
              {%- if choice_label_raw -%}{{- choiceData.label|raw -}}{%- else -%}{{- choiceData.label -}}{%- endif -%}
            </span>
          </span>
        </li>
        {% for child in choiceData.choices %}
          {% set choice_item_key = 'formView_' ~ child.value %}
          {% if choice_item_key in widgetKeys %}
            {% set choice_item = widgets[choice_item_key] %}
            {{ block('choice_widget_expanded_item') }}
          {% endif %}
        {% endfor %}
      {% else %}
        {% set choice_item_key = 'formView_' ~ choiceData.value %}
        {% if choice_item_key in widgetKeys %}
          {% set choice_item = widgets[choice_item_key] %}
          {{ block('choice_widget_expanded_item') }}
        {% endif %}
      {% endif %}
    {% endfor %}
  </ul>
{% endblock choice_widget_expanded %}



{%- block widget_attributes -%}
  {% set attr = attr|appendToKey('class', ' ' ~ additional_classes ?? 'form-control') %}
  {% set attr = attr|merge({'class':attr.class|cssClasses}) %}

  {{ parent() }}
{%- endblock widget_attributes -%}



{%- block form_label -%}
  {% set label_attr = label_attr|appendToKey('class', '') %}
  {% set label_attr = label_attr|merge({'class':label_attr.class|cssClasses}) %}

  {% if label is not same as(false) -%}
    {% if not compound -%}
      {% set label_attr = label_attr|merge({'for': id}) %}
    {%- endif -%}
    {% if required -%}
      {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
    {%- endif -%}
    {% if label is empty -%}
      {%- if label_format is not empty -%}
        {% set label = label_format|replace({
          '%name%': name,
          '%id%': id,
        }) %}
      {%- else -%}
        {% set label = name|humanize %}
      {%- endif -%}
    {%- endif -%}
    <{{ element|default('label') }}{% if label_attr %}{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}{% endif %}>
    {%- if translation_domain is same as(false) -%}
      {%- if label_raw -%}{{- label|raw -}}{%- else -%}{{- label -}}{%- endif -%}
    {%- else -%}
      {%- if label_raw -%}{{- label|trans({}, translation_domain)|raw -}}{%- else -%}{{- label|trans({}, translation_domain) -}}{%- endif -%}
    {%- endif -%}
    </{{ element|default('label') }}>
  {%- endif -%}
{%- endblock form_label -%}



{%- block button_widget -%}
  {%- if label is empty -%}
    {%- if label_format is not empty -%}
      {% set label = label_format|replace({
        '%name%': name,
        '%id%': id,
      }) %}
    {%- elseif label is not same as(false) -%}
      {% set label = name|humanize %}
    {%- endif -%}
  {%- endif -%}
  {%- set labelTranslatedOrNot = translation_domain is same as(false) or label is same as(false) ? label : label|trans(label_translation_parameters, translation_domain) -%}
  <button type="{{ type|default('button') }}" {{ block('button_attributes') }}>{{ label_raw ? (labelTranslatedOrNot|raw) : labelTranslatedOrNot }}</button>
{%- endblock button_widget -%}
