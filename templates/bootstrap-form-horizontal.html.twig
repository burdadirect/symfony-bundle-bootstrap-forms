{% use 'form_div_layout.html.twig' %}


{% macro customContent(form, custom_content, key) %}
  {%- include '@HBMBootstrapForm/custom-content.html.twig' with { 'form': form, 'content': custom_content[key]|default, 'type': key } -%}
{% endmacro %}

{% macro labelRawAndOrTranslated(label, raw, translationDomain, translationDomainParameters = {}) %}
  {%- if translationDomain is same as(false) or label is same as(false) -%}
    {%- if raw -%}{{- label|raw -}}{%- else -%}{{- label -}}{%- endif -%}
  {%- else -%}
    {%- if raw -%}{{- label|trans(translationDomainParameters, translationDomain)|raw -}}{%- else -%}{{- label|trans(translationDomainParameters, translationDomain) -}}{%- endif -%}
  {%- endif -%}
{% endmacro %}


{# -------------------------------------------------------------------------- #}


{% block form_row %}
  {% set sub_form = false %}
  {% if block_prefixes|length == 2 %}
    {% set sub_form = true %}
  {% endif %}

  {% if sub_form %}

    {{ form_widget(form) }}

  {% else %}

    {{- _self.customContent(form, custom_content|default(), 'before-text') -}}

    <div {{ attributes(row_attr).add(card_text_attr).id(id ~ '_wrapper').class(hbmbfClasses('card_text', ['card-text', 'hbm-form-group', 'form-group']))|raw }}>
      {{- _self.customContent(form, custom_content|default(), 'before-item') -}}

      {% if 'checkbox' not in block_prefixes %}
        {% include '@HBMBootstrapForm/label-with-custom-content.html.twig' %}
      {% endif %}

      <div {{ attributes(card_item_attr).class(hbmbfClasses('card_item', ['hbm-form-controls']))|raw }}>
        {{- _self.customContent(form, custom_content|default(), 'before-widget') -}}
        {{ form_widget(form) }}
        {{- _self.customContent(form, custom_content|default(), 'after-widget') -}}

        {% if 'checkbox' in block_prefixes %}
          {% include '@HBMBootstrapForm/label-with-custom-content.html.twig' with { 'label_attr': attributes(label_attr).class('hbm-form-label-inline').toArray } %}
        {% endif %}

        {{- _self.customContent(form, custom_content|default(), 'before-help') -}}
        {% if help is defined and help is not null %}
          {{ form_help(form, {'help_element': hbmbfElement('help'), 'help_attr': attributes(help_attr).class(hbmbfClasses('help', ['hbm-form-help'])).toArray, 'help_suffix': 'help'}) }}
        {% endif %}
        {{- _self.customContent(form, custom_content|default(), 'after-help') -}}

        {{- _self.customContent(form, custom_content|default(), 'before-error') -}}
        {{ form_errors(form) }}
        {{- _self.customContent(form, custom_content|default(), 'after-error') -}}
      </div>

      {{- _self.customContent(form, custom_content|default(), 'after-item') -}}
    </div>

    {{- _self.customContent(form, custom_content|default(), 'after-text') -}}

  {% endif %}
{% endblock form_row %}



{% block form_help -%}
  {%- if help is not empty -%}
    {%- set help_attr = help_attr|merge({class: (help_attr.class|default('') ~ ' help-text')|trim}) -%}
    <{{ help_element|raw }} id="{{ id }}_{{ help_suffix }}"{% with { attr: help_attr } %}{{ block('attributes') }}{% endwith %}>
    {%- if translation_domain is same as(false) -%}
      {%- if help_html is same as(false) -%}
        {{- help -}}
      {%- else -%}
        {{- help|raw -}}
      {%- endif -%}
    {%- else -%}
      {%- if help_html is same as(false) -%}
        {{- help|trans(help_translation_parameters, translation_domain) -}}
      {%- else -%}
        {{- help|trans(help_translation_parameters, translation_domain)|raw -}}
      {%- endif -%}
    {%- endif -%}
    </{{ help_element|raw }}>
  {%- endif -%}
{%- endblock form_help %}



{%- block button_row -%}
  {{- form_widget(form) -}}
{%- endblock button_row -%}



{% block form_errors %}
  {% if errors|length > 0 %}
    {{ hbmbfTagStart('ul', hbmbfClasses('alert_container', ['hbm-alerts']))|raw }}
    {% for error in errors %}
      {{ hbmbfHtml(error.message, 'li', hbmbfClasses('alert_item'))|raw }}
    {% endfor %}
    {{ hbmbfTagEnd('ul')|raw }}
  {% endif %}
{% endblock form_errors %}



{% block form_widget -%}
  {% if compound %}
    {% if card|default(false) %}
      {{- block('form_widget_compound_card') -}}
    {% else %}
      {{- block('form_widget_compound') -}}
    {% endif %}
  {% else %}
    {{- block('form_widget_simple') -}}
  {% endif %}
{%- endblock form_widget %}



{% block form_widget_compound_card -%}
  <div {{ attributes(attr).add(card_attr).id(id).class(hbmbfClasses('card', ['card', 'hbm-form-card']))|raw }}>

    {{- _self.customContent(form, custom_content|default(), 'before-header') -}}

    <div {{ attributes().add(card_header_attr).class(hbmbfClasses('card_header', ['card-header', 'hbm-form-header']))|raw }}>
      {{- _self.customContent(form, custom_content|default(), 'before-headline') -}}
      {{ form_label(form) }}
      {{- _self.customContent(form, custom_content|default(), 'after-headline') -}}
    </div>

    {{- _self.customContent(form, custom_content|default(), 'after-header') -}}

    {{- _self.customContent(form, custom_content|default(), 'before-body') -}}

    <div {{ attributes(attr).add(card_body_attr).class(hbmbfClasses('card_body', ['card-body', 'hbm-form-body', 'card-body-collapsible']))|raw }}>

      {{- _self.customContent(form, custom_content|default(), 'before-rows') -}}

      {%- if form.parent is empty -%}
        {{ form_errors(form) }}
      {%- endif -%}
      {{- block('form_rows') -}}
      {{- form_rest(form) -}}

      {{- _self.customContent(form, custom_content|default(), 'after-rows') -}}

    </div>

    {{- _self.customContent(form, custom_content|default(), 'after-body') -}}

  </div>
{%- endblock form_widget_compound_card %}



{% block form_widget_simple %}
  {% set type = type|default('text') %}
  {% set attributes = attributes(attr) %}
  {% set classes = attributes.classes %}

  {% if 'hbm_content' not in block_prefixes %}
    {% if 'hidden' not in block_prefixes %}<span class="input-group">{% endif %}
    <input type="{{ type }}" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}" {% endif %}/>

    {%- if 'read_only' in attr|keys %}
      <span class="input-gr<oup-append"><span class="input-group-text"><i class="fa fa-fw fa-ban"></i></span></span>
    {%- elseif disabled %}
      <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-ban"></i></span></span>
    {%- elseif 'number' in block_prefixes %}
      <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-hashtag"></i></span></span>
    {%- elseif 'color' in block_prefixes %}
      <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-palette"></i></span></span>
    {%- elseif 'email' in block_prefixes %}
      <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-envelope"></i></span></span>
    {%- elseif 'tel' in block_prefixes %}
      <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-phone"></i></span></span>
    {%- elseif 'date-picker' in classes or 'datetime-picker' in classes or type == 'datetime' %}
      <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-calendar"></i></span></span>
    {%- elseif 'url' in block_prefixes %}
      <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-globe"></i></span></span>
    {%- elseif 'file' in block_prefixes %}
      <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-file"></i></span></span>
    {%- elseif 'password' in block_prefixes %}
      <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-key"></i></span></span>
    {%- elseif 'money' in block_prefixes %}
      <span class="input-group-append"><span class="input-group-text"><span class="fa-fw">{{ money_pattern|form_encode_currency('') }}</span></span></span>
    {%- elseif 'text' in block_prefixes %}
      <span class="input-group-append"><span class="input-group-text"><i class="fa fa-fw fa-pencil-alt"></i></span></span>
    {% endif -%}
    {% if 'hidden' not in block_prefixes %}</span>{% endif %}
  {% endif %}
{% endblock form_widget_simple %}



{%- block money_widget -%}
  {{ block('form_widget_simple') }}
{%- endblock money_widget -%}



{%- block button_widget -%}
  {%- if label is empty -%}
    {%- if label_format is not empty -%}
      {% set label = label_format|replace({
        '%name%': name,
        '%id%': id,
      }) %}
    {%- elseif label is not same as(false) -%}
      {% set label = name|humanize %}
    {%- endif -%}
  {%- endif -%}
  <button type="{{ type|default('button') }}" {{ block('button_attributes') }}>{{ _self.labelRawAndOrTranslated(label, label_raw, translation_domain, label_translation_parameters) }}</button>
{%- endblock button_widget -%}


{# -------------------------------------------------------------------------- #}


{% block choice_widget_expanded %}

  {% set element = tag('ul', attr).class('hbm-form-input-groups').id(id|default) %}
  {% if button|default(false) %}
    {% set element = element.tag('div').add(button_container_attr).set('data-toggle', 'buttons').class(hbmbfClasses('button_container')) %}
  {%- endif -%}

  {{ element.open|raw }}

    {{- _self.customContent(custom_content|default(), 'before-choices') -}}

    {% if placeholder is not null %}
      {% set childKey = 'placeholder' %}
      {{- block('choice_widget_expanded_option') -}}
    {%- endif -%}

    {%- if preferred_choices|length > 0 -%}
      {% set options = preferred_choices %}
      {{- block('choice_widget_expanded_options') -}}

      {%- if separator is not none -%}
        {{- block('choice_widget_expanded_options_separator') -}}
      {%- endif -%}
    {%- endif -%}

    {% set options = choices %}
    {{- block('choice_widget_expanded_options') -}}

    {{- _self.customContent(custom_content|default(), 'after-choices') -}}

  {{ element.close|raw }}

{% endblock choice_widget_expanded %}



{% block choice_widget_expanded_options %}
  {% for labelOrKey, choice in options %}
    {%- if choice is iterable -%}
      {# Render option group #}
      {{- block('choice_widget_expanded_options_header') -}}

      {% set options = choice %}
      {{- block('choice_widget_expanded_options') -}}
    {%- else -%}
      {# Render option item #}
      {% set childKey = labelOrKey %}
      {{- block('choice_widget_expanded_option') -}}
    {%- endif -%}
  {% endfor %}
{% endblock choice_widget_expanded_options %}



{% block choice_widget_expanded_option %}
  {% set child = form[childKey] %}
  {% if not child.rendered %}
    {% if button|default(false) %}

      {% set label_prefix %}
        {{ form_widget(child) }}
      {% endset %}

      {% set attributes = attributes(button_attr).class('form-control-handle').add(button_items_attr|hbmbfItemAttr(choice.data|default(null), childKey, child.vars.label)).class(hbmbfClasses('button_item')) %}
      {% if disabled %}
        {% set attributes = attributes.class('hbm-disabled').set('aria-disabled', 'true').set('tabindex', '-1') %}
      {% endif %}

      {{ form_label(child, null, { 'label_attr': attributes.toArray, 'label_raw': choice_label_raw, 'label_prefix': label_prefix }) }}

    {%- else -%}

      <li {{ attributes(li_attr).class('input-group').add(li_items_attr|hbmbfItemAttr(choice.data|default(null), childKey, child.vars.label))|raw }}>
          <span {{ attributes().class('input-group-prepend').class('hbm-form-input-checkbox', multiple, 'hbm-form-input-radio')|raw }}>
            <span class="input-group-text">
              {{ form_widget(child) }}
            </span>
          </span>
        {{ form_label(child, null, { 'label_attr': attributes().class('form-control-handle').toArray, 'label_raw': choice_label_raw }) }}
      </li>

    {%- endif -%}
  {%- endif -%}
{% endblock choice_widget_expanded_option %}



{% block choice_widget_expanded_options_separator %}
  {% if button|default(false) %}
    <span class="btn-group-separator">
      {{ separator }}
    </span>
  {% else %}
    <li class="input-group input-group-separator">
      <span class="input-group-separator">
        <span class="input-group-text">
          {{ separator }}
        </span>
      </span>
    </li>
  {% endif %}
{% endblock choice_widget_expanded_options_separator %}



{% block choice_widget_expanded_options_header %}
  {% if button|default(false) %}
    <span class="btn-group-header">
      {{ _self.labelRawAndOrTranslated(labelOrKey, choice_label_raw, choice_translation_domain) }}
    </span>
  {% else %}
    <li class="input-group input-group-header">
      <span class="input-group-header">
        <span class="input-group-text">
          {{ _self.labelRawAndOrTranslated(labelOrKey, choice_label_raw, choice_translation_domain) }}
        </span>
      </span>
    </li>
  {% endif %}
{% endblock choice_widget_expanded_options_header %}


{# -------------------------------------------------------------------------- #}


{%- block widget_attributes -%}
  {% if 'choice' in block_prefixes and expanded == false %}
    {% set attr = attributes(attr).class('custom-select').toArray %}
  {% elseif 'checkbox' not in block_prefixes %}
    {% set attr = attributes(attr).class('form-control').toArray %}
  {% endif %}
  {{ parent() }}
{%- endblock widget_attributes -%}



{%- block form_label -%}
  {% set element = tag(element|default('label'), label_attr) %}

  {% if label is not same as(false) -%}
    {% set element = element.set('for', id, not compound).class('required', required) %}
    {% if label is empty -%}
      {%- if label_format is not empty -%}
        {% set label = label_format|replace({
          '%name%': name,
          '%id%': id,
        }) %}
      {%- else -%}
        {% set label = name|humanize %}
      {%- endif -%}
    {%- endif -%}
    {{ element.open|raw }}
      {{- label_prefix|default -}}
      {{ _self.labelRawAndOrTranslated(label, label_raw, translation_domain)|raw }}
      {{- label_postfix|default -}}
    {{ element.close|raw }}
  {%- endif -%}
{%- endblock form_label -%}
